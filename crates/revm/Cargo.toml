[package]
name = "fluentbase-revm"
version = "0.1.0"
authors.workspace = true
repository.workspace = true
edition.workspace = true
readme.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]
bench = false
proc-macro = false

[dependencies]
# revm
revm-precompile = { workspace = true }
revm-primitives = { workspace = true }
revm-interpreter = { workspace = true, features = ["fluent_revm"] }
#revm = { workspace = true, features = ["fluent_revm"] }

# fluentbase
fluentbase-codec = { workspace = true, default-features = false }
fluentbase-sdk = { workspace = true, default-features = false }
fluentbase-core = { workspace = true, default-features = false, features = ["ecl", "wcl", "fluent_revm"] }
fluentbase-types = { workspace = true, default-features = false, features = ["fluent_revm"] }
fluentbase-runtime = { workspace = true, default-features = false, optional = true }

# misc
auto_impl = { version = "1.2", default-features = false }
cfg-if = "1.0"
dyn-clone = "1.0"

# Optional
serde = { version = "1.0", default-features = false, features = [
    "derive",
    "rc",
], optional = true }
serde_json = { version = "1.0", default-features = false, features = [
    "alloc",
], optional = true }

# ethersdb
tokio = { version = "1.36", features = [
    "rt-multi-thread",
    "macros",
], optional = true }
ethers-providers = { version = "2.0", optional = true }
ethers-core = { version = "2.0", optional = true }

[dev-dependencies]
ethers-contract = { version = "2.0.14", default-features = false }
anyhow = "1.0.81"
criterion = "0.5"
indicatif = "0.17"
fluentbase-genesis = { workspace = true }
fluentbase-poseidon = { workspace = true }
rwasm = { workspace = true, default-features = false }
lazy_static = { workspace = true }

[features]
default = ["std", "c-kzg", "secp256k1", "portable"]
#fluent_revm = ["revm-interpreter/fluent_revm"]
std = [
    "serde?/std",
    "serde_json?/std",
    "serde_json?/preserve_order",
    "revm-precompile/std",
    "revm-primitives/std",
    "dep:fluentbase-runtime",
    "fluentbase-runtime?/std",
    "fluentbase-sdk/std",
]
serde = [
    "dep:serde",
    #    "revm-precompile/serde",
    #    "revm-primitives/serde",
]
serde-json = ["serde", "dep:serde_json"]
arbitrary = []
asm-keccak = [
    "revm-precompile/asm-keccak",
    "revm-primitives/asm-keccak",
]
portable = [
    "revm-precompile/portable",
    "revm-primitives/portable",
]

test-utils = []

optimism = [
    "revm-precompile/optimism",
    "revm-primitives/optimism",
]
# Optimism default handler enabled Optimism handler register by default in EvmBuilder.
optimism-default-handler = [
    "optimism",
    "revm-precompile/optimism-default-handler",
    "revm-primitives/optimism-default-handler",
]
negate-optimism-default-handler = [
    "revm-precompile/negate-optimism-default-handler",
    "revm-precompile/negate-optimism-default-handler",
]

ethersdb = [
    "std",
    "tokio",
    "ethers-providers",
    "ethers-core",
] # Negate optimism default handler

dev = [
    "memory_limit",
    "optional_balance_check",
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_gas_refund",
    "optional_no_base_fee",
    "optional_beneficiary_reward",
]
memory_limit = ["revm-primitives/memory_limit"]
optional_balance_check = ["revm-primitives/optional_balance_check"]
optional_block_gas_limit = ["revm-primitives/optional_block_gas_limit"]
optional_eip3607 = ["revm-primitives/optional_eip3607"]
optional_gas_refund = ["revm-primitives/optional_gas_refund"]
optional_no_base_fee = ["revm-primitives/optional_no_base_fee"]
optional_beneficiary_reward = ["revm-primitives/optional_beneficiary_reward"]
e2e = ["fluentbase-core/e2e"]

# See comments in `revm-precompile`
secp256k1 = [
    "revm-precompile/secp256k1",
]
c-kzg = [
    "revm-precompile/c-kzg",
    "revm-primitives/c-kzg",
]

[[bench]]
name = "bench"
path = "benches/bench.rs"
harness = false
