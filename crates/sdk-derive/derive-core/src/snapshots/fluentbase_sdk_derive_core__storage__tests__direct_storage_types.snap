---
source: crates/sdk-derive/derive-core/src/storage.rs
expression: formatted
---
pub struct Owner {}
impl Owner {
    const SLOT: fluentbase_sdk::U256 = fluentbase_sdk::U256::from_limbs([
        0u64, 0u64, 0u64, 0u64,
    ]);
    fn get<SDK: fluentbase_sdk::SharedAPI>(sdk: &SDK) -> Address {
        let key = Self::key(sdk);
        <Address as fluentbase_sdk::storage::DirectStorage<SDK>>::get(sdk, key)
    }
    fn set<SDK: fluentbase_sdk::SharedAPI>(sdk: &mut SDK, value: Address) {
        let key = Self::key(sdk);
        <Address as fluentbase_sdk::storage::DirectStorage<SDK>>::set(sdk, key, value)
    }
    fn key<SDK: fluentbase_sdk::SharedAPI>(_sdk: &SDK) -> fluentbase_sdk::U256 {
        Self::SLOT
    }
}
pub struct Paused {}
impl Paused {
    const SLOT: fluentbase_sdk::U256 = fluentbase_sdk::U256::from_limbs([
        1u64, 0u64, 0u64, 0u64,
    ]);
    fn get<SDK: fluentbase_sdk::SharedAPI>(sdk: &SDK) -> bool {
        let key = Self::key(sdk);
        <bool as fluentbase_sdk::storage::DirectStorage<SDK>>::get(sdk, key)
    }
    fn set<SDK: fluentbase_sdk::SharedAPI>(sdk: &mut SDK, value: bool) {
        let key = Self::key(sdk);
        <bool as fluentbase_sdk::storage::DirectStorage<SDK>>::set(sdk, key, value)
    }
    fn key<SDK: fluentbase_sdk::SharedAPI>(_sdk: &SDK) -> fluentbase_sdk::U256 {
        Self::SLOT
    }
}
pub struct SmallValue {}
impl SmallValue {
    const SLOT: fluentbase_sdk::U256 = fluentbase_sdk::U256::from_limbs([
        2u64, 0u64, 0u64, 0u64,
    ]);
    fn get<SDK: fluentbase_sdk::SharedAPI>(sdk: &SDK) -> u8 {
        let key = Self::key(sdk);
        <u8 as fluentbase_sdk::storage::DirectStorage<SDK>>::get(sdk, key)
    }
    fn set<SDK: fluentbase_sdk::SharedAPI>(sdk: &mut SDK, value: u8) {
        let key = Self::key(sdk);
        <u8 as fluentbase_sdk::storage::DirectStorage<SDK>>::set(sdk, key, value)
    }
    fn key<SDK: fluentbase_sdk::SharedAPI>(_sdk: &SDK) -> fluentbase_sdk::U256 {
        Self::SLOT
    }
}
