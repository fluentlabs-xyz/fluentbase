use alloy_primitives::{address, b256, Address, B256};

pub const PRECOMPILE_EVM: Address = address!("0000000000000000000000000000000000005210");
pub const PRECOMPILE_EVM_DEPLOYER: Address = address!("0000000000000000000000000000000000005211");
pub const PRECOMPILE_EVM_LOADER: Address = address!("0000000000000000000000000000000000005212");
pub const PRECOMPILE_WASM: Address = address!("0000000000000000000000000000000000005220");
pub const PRECOMPILE_WASM_DEPLOYER: Address = address!("0000000000000000000000000000000000005221");
pub const PRECOMPILE_WASM_LOADER: Address = address!("0000000000000000000000000000000000005222");
pub const PRECOMPILE_SVM: Address = address!("0000000000000000000000000000000000005230");
pub const PRECOMPILE_BLENDED: Address = address!("0000000000000000000000000000000000005240");

pub const PRECOMPILE_SECP256K1_ECRECOVER: Address =
    address!("0000000000000000000000000000000000000001");
pub const PRECOMPILE_SHA256: Address = address!("0000000000000000000000000000000000000002");
pub const PRECOMPILE_RIPEMD160: Address = address!("0000000000000000000000000000000000000003");
pub const PRECOMPILE_IDENTITY: Address = address!("0000000000000000000000000000000000000004");
pub const PRECOMPILE_MODEXP: Address = address!("0000000000000000000000000000000000000005");
pub const PRECOMPILE_BN128_ADD: Address = address!("0000000000000000000000000000000000000006");
pub const PRECOMPILE_BN128_MUL: Address = address!("0000000000000000000000000000000000000007");
pub const PRECOMPILE_BN128_PAIR: Address = address!("0000000000000000000000000000000000000008");
pub const PRECOMPILE_BLAKE2: Address = address!("0000000000000000000000000000000000000009");
pub const PRECOMPILE_KZG_POINT_EVALUATION: Address =
    address!("000000000000000000000000000000000000000a");
pub const PRECOMPILE_BLS12_381_G1_ADD: Address =
    address!("000000000000000000000000000000000000000b");
pub const PRECOMPILE_BLS12_381_G1_MUL: Address =
    address!("000000000000000000000000000000000000000c");
pub const PRECOMPILE_BLS12_381_G1_MSM: Address =
    address!("000000000000000000000000000000000000000d");
pub const PRECOMPILE_BLS12_381_G2_ADD: Address =
    address!("000000000000000000000000000000000000000e");
pub const PRECOMPILE_BLS12_381_G2_MUL: Address =
    address!("000000000000000000000000000000000000000f");
pub const PRECOMPILE_BLS12_381_G2_MSM: Address =
    address!("0000000000000000000000000000000000000010");
pub const PRECOMPILE_BLS12_381_PAIRING: Address =
    address!("0000000000000000000000000000000000000011");
pub const PRECOMPILE_BLS12_381_MAP_FP_TO_G1: Address =
    address!("0000000000000000000000000000000000000012");
pub const PRECOMPILE_BLS12_381_MAP_FP2_TO_G2: Address =
    address!("0000000000000000000000000000000000000013");
pub const PRECOMPILE_SECP256R1_VERIFY: Address =
    address!("0000000000000000000000000000000000000100");

pub const SYSCALL_ID_STORAGE_READ: B256 =
    b256!("4023096842131de08903e3a03a648b5a91209ca2a264e0a3a90f9899431ad227"); // keccak256("_syscall_storage_read")
pub const SYSCALL_ID_STORAGE_WRITE: B256 =
    b256!("126659e43fb4baaff19b992a1869aa0cac8ec5e30b38556fd8cf28e6fd2255b9"); // keccak256("_syscall_storage_write")
pub const SYSCALL_ID_CALL: B256 =
    b256!("1d2e7a52c8548eccd33b1f100ae79c86c1a6a6baa18215f916d395a7095ee3e9"); // keccak256("_syscall_call")
pub const SYSCALL_ID_DELEGATE_CALL: B256 =
    b256!("75bd4ec817c86b0736da59cb28bb22979b1547ee30426044e0ded9055ecfee5a"); // keccak256("_syscall_delegate_call")
pub const SYSCALL_ID_CREATE: B256 =
    b256!("9708d5acbee3bf900474f0e80767e267e15a3c0f8bda6f3f882235855d42a61f"); // keccak256("_syscall_create")
pub const SYSCALL_ID_EMIT_LOG: B256 =
    b256!("505be4983de61b5ab79cdc8164e4db895c4f9548cee794e1e0bccec1dc0b751d"); // keccak256("_syscall_emit_log")
