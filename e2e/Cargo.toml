[package]
name = "fluentbase-e2e"
version = "0.1.0"
authors.workspace = true
repository.workspace = true
edition.workspace = true
readme.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true

[dependencies]
fluentbase-runtime = { workspace = true }
fluentbase-sdk = { workspace = true }
fluentbase-codec = { workspace = true }
fluentbase-genesis = { workspace = true }

solana-ee-core = { workspace = true }

rwasm = { workspace = true }
revm = { workspace = true }
hex = { workspace = true }
hex-literal = { workspace = true }
alloy-sol-types = { workspace = true }
paste = { workspace = true }

[build-dependencies]
fluentbase-examples-constructor-params = { path = "../examples/constructor-params" }
fluentbase-examples-erc20 = { path = "../examples/erc20" }
fluentbase-examples-panic = { path = "../examples/panic" }
fluentbase-examples-greeting = { path = "../examples/greeting" }
fluentbase-examples-keccak256 = { path = "../examples/keccak256" }
fluentbase-examples-echo = { path = "../examples/identity" }
fluentbase-examples-router-solidity = { path = "../examples/router-solidity" }
fluentbase-examples-rwasm = { path = "../examples/rwasm" }
fluentbase-examples-simple-storage = { path = "../examples/simple-storage" }
fluentbase-examples-abi-solidity = { path = "../examples/abi-solidity" }
fluentbase-examples-secp256k1 = { path = "../examples/secp256k1" }
fluentbase-examples-checkmate = { path = "../examples/checkmate" }
fluentbase-examples-client-solidity = { path = "../examples/client-solidity" }
fluentbase-examples-storage = { path = "../examples/storage" }
fluentbase-examples-json = { path = "../examples/json" }
fluentbase-examples-nitro-verifier = { path = "../examples/nitro-verifier" }
fluentbase-contracts-svm = { path = "../contracts/svm" }

[features]
default = ["std", "fluentbase-runtime/debug-print"]
std = [
    "fluentbase-runtime/std",
    "fluentbase-sdk/std",
    "fluentbase-codec/std",
    "fluentbase-genesis/std",
    "rwasm/std",
    "revm/std",
    "solana-ee-core/std",
]
