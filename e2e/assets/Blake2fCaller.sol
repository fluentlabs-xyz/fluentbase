// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Blake2fCaller {
    address constant BLAKE2F_PRECOMPILE = address(0x09);

    function callBlake2f() public {
        bytes memory input = hex"0000000048c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001";
        (bool success, bytes memory output) = BLAKE2F_PRECOMPILE.call(input);
        require(success, "BLAKE2f call failed");
        bytes memory expectedOutput = hex"08c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d282e6ad7f520e511f6c3e2b8c68059b9442be0454267ce079217e1319cde05b";
        require(keccak256(output) == keccak256(expectedOutput), "Unexpected BLAKE2f output");
    }
}
