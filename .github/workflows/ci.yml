name: Test

on:
  push:
    branches: [ main, devel ]
    paths-ignore:
      - "**.md"
      - "docs/**"
  pull_request:
    branches: [ main, devel ]
    paths-ignore:
      - "**.md"
      - "docs/**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Run tests
        run: cargo test --no-fail-fast

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          submodules: true
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@nightly
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  rust-fmt-lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          targets: wasm32-unknown-unknown
      - name: Check formatting
        run: cargo fmt --all -- --check
        continue-on-error: true
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        continue-on-error: true

  evm-e2e-tests:
    name: REVM E2E Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "revm/e2e -> target"
      - name: Sync ethereum tests
        working-directory: revm/e2e
        run: make sync_tests
      - name: Run ethereum tests
        working-directory: revm/e2e
        run: make run_general_state_tests