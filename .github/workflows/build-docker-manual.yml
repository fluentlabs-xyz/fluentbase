name: Build Docker Image - Manual

on:
    workflow_dispatch:
        inputs:
            tag_name:
                description: "Tag name for the image (e.g., v0.2.1-dev)"
                required: true
                type: string
            push_latest:
                description: "Also tag as :latest"
                required: false
                default: true
                type: boolean

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository_owner }}/fluentbase-build
    RUST_VERSION: "1.87.0"

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Prepare build metadata
              id: meta
              run: |
                  TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag_name }}"

                  if [[ "${{ github.event.inputs.push_latest }}" == "true" ]]; then
                    TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
                  fi

                  echo "tags=$TAGS" >> $GITHUB_OUTPUT
                  echo "timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./crates/build
                  file: ./crates/build/Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: |
                      org.opencontainers.image.source=${{ github.event.repository.html_url }}
                      org.opencontainers.image.revision=${{ github.sha }}
                      org.opencontainers.image.version=${{ github.event.inputs.tag_name }}
                      org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
                      org.opencontainers.image.title=Fluent Build Environment
                      org.opencontainers.image.description=Docker image for building Fluent smart contracts
                      rust.version=${{ env.RUST_VERSION }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      BINARYEN_VERSION=120
                      RUST_VERSION=${{ env.RUST_VERSION }}

            - name: Print summary
              run: |
                  echo "### 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Tag:** \`${{ github.event.inputs.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "**Rust Version:** \`${{ env.RUST_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "**Source:** Current branch (\`${{ github.ref_name }}\`)" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Published Images:**" >> $GITHUB_STEP_SUMMARY
                  IFS=',' read -ra TAGS_ARRAY <<< "${{ steps.meta.outputs.tags }}"
                  for tag in "${TAGS_ARRAY[@]}"; do
                    echo "- \`${tag}\`" >> $GITHUB_STEP_SUMMARY
                  done
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "**Build Time:** ${{ steps.meta.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
