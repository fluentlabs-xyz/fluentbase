use crate::common::UntypedValue;
use crate::engine::bytecode::Instruction;
use crate::rwasm::compiler::Translator;
use crate::rwasm::instruction_set::InstructionSet;
use crate::rwasm::{WazmResult, MAX_MEMORY_SIZE};

impl Translator for Instruction {
    fn translate(&self, result: &mut InstructionSet) -> WazmResult<()> {
        use Instruction as WI;
        let instr = match *self {
            WI::Unreachable => Instruction::Unreachable,
            WI::ConsumeFuel(fuel) => Instruction::ConsumeFuel(fuel),
            WI::Drop => Instruction::Drop,
            WI::Select => Instruction::Select,

            WI::LocalGet(local_depth) => Instruction::LocalGet(local_depth),
            WI::LocalSet(local_depth) => Instruction::LocalSet(local_depth),
            WI::LocalTee(local_depth) => Instruction::LocalTee(local_depth),

            WI::GlobalGet(index) => Instruction::GlobalGet(index),
            WI::GlobalSet(index) => Instruction::GlobalSet(index),

            WI::I32Load(offset) => Instruction::I32Load(offset),
            WI::I64Load(offset) => Instruction::I64Load(offset),
            WI::F32Load(offset) => Instruction::F32Load(offset),
            WI::F64Load(offset) => Instruction::F64Load(offset),
            WI::I32Load8S(offset) => Instruction::I32Load8S(offset),
            WI::I32Load8U(offset) => Instruction::I32Load8U(offset),
            WI::I32Load16S(offset) => Instruction::I32Load16S(offset),
            WI::I32Load16U(offset) => Instruction::I32Load16U(offset),
            WI::I64Load8S(offset) => Instruction::I64Load8S(offset),
            WI::I64Load8U(offset) => Instruction::I64Load8U(offset),
            WI::I64Load16S(offset) => Instruction::I64Load16S(offset),
            WI::I64Load16U(offset) => Instruction::I64Load16U(offset),
            WI::I64Load32S(offset) => Instruction::I64Load32S(offset),
            WI::I64Load32U(offset) => Instruction::I64Load32U(offset),
            WI::I32Store(offset) => Instruction::I32Store(offset),
            WI::I64Store(offset) => Instruction::I64Store(offset),
            WI::F32Store(offset) => Instruction::F32Store(offset),
            WI::F64Store(offset) => Instruction::F64Store(offset),
            WI::I32Store8(offset) => Instruction::I32Store8(offset),
            WI::I32Store16(offset) => Instruction::I32Store16(offset),
            WI::I64Store8(offset) => Instruction::I64Store8(offset),
            WI::I64Store16(offset) => Instruction::I64Store16(offset),
            WI::I64Store32(offset) => Instruction::I64Store32(offset),

            WI::MemorySize => Instruction::I32Const(UntypedValue::from(MAX_MEMORY_SIZE)),
            WI::MemoryGrow => Instruction::MemoryGrow,
            WI::MemoryFill => Instruction::MemoryFill,
            WI::MemoryCopy => Instruction::MemoryCopy,
            WI::MemoryInit(index) => Instruction::MemoryInit(index),
            WI::DataDrop(index) => Instruction::DataDrop(index),
            WI::TableSize(index) => Instruction::TableSize(index),
            WI::TableGrow(index) => Instruction::TableGrow(index),
            WI::TableFill(index) => Instruction::TableFill(index),
            WI::TableGet(index) => Instruction::TableGet(index),
            WI::TableSet(index) => Instruction::TableSet(index),
            WI::TableCopy { .. } => *self,
            WI::TableInit { .. } => *self,
            WI::ElemDrop(index) => Instruction::ElemDrop(index),
            WI::RefFunc(index) => Instruction::RefFunc(index),

            WI::I64Const(untyped_value) => Instruction::I64Const(UntypedValue::from(untyped_value.to_bits())),
            WI::I32Const(untyped_value) => Instruction::I32Const(UntypedValue::from(untyped_value.to_bits())),
            WI::I32Eqz => Instruction::I32Eqz,
            WI::I32Eq => Instruction::I32Eq,
            WI::I32Ne => Instruction::I32Ne,
            WI::I32LtS => Instruction::I32LtS,
            WI::I32LtU => Instruction::I32LtU,
            WI::I32GtS => Instruction::I32GtS,
            WI::I32GtU => Instruction::I32GtU,
            WI::I32LeS => Instruction::I32LeS,
            WI::I32LeU => Instruction::I32LeU,
            WI::I32GeS => Instruction::I32GeS,
            WI::I32GeU => Instruction::I32GeU,
            WI::I64Eqz => Instruction::I64Eqz,
            WI::I64Eq => Instruction::I64Eq,
            WI::I64Ne => Instruction::I64Ne,
            WI::I64LtS => Instruction::I64LtS,
            WI::I64LtU => Instruction::I64LtU,
            WI::I64GtS => Instruction::I64GtS,
            WI::I64GtU => Instruction::I64GtU,
            WI::I64LeS => Instruction::I64LeS,
            WI::I64LeU => Instruction::I64LeU,
            WI::I64GeS => Instruction::I64GeS,
            WI::I64GeU => Instruction::I64GeU,
            WI::I32Clz => Instruction::I32Clz,
            WI::I32Ctz => Instruction::I32Ctz,
            WI::I32Popcnt => Instruction::I32Popcnt,
            WI::I32Add => Instruction::I32Add,
            WI::I32Sub => Instruction::I32Sub,
            WI::I32Mul => Instruction::I32Mul,
            WI::I32DivS => Instruction::I32DivS,
            WI::I32DivU => Instruction::I32DivU,
            WI::I32RemS => Instruction::I32RemS,
            WI::I32RemU => Instruction::I32RemU,
            WI::I32And => Instruction::I32And,
            WI::I32Or => Instruction::I32Or,
            WI::I32Xor => Instruction::I32Xor,
            WI::I32Shl => Instruction::I32Shl,
            WI::I32ShrS => Instruction::I32ShrS,
            WI::I32ShrU => Instruction::I32ShrU,
            WI::I32Rotl => Instruction::I32Rotl,
            WI::I32Rotr => Instruction::I32Rotr,
            WI::I64Clz => Instruction::I64Clz,
            WI::I64Ctz => Instruction::I64Ctz,
            WI::I64Popcnt => Instruction::I64Popcnt,
            WI::I64Add => Instruction::I64Add,
            WI::I64Sub => Instruction::I64Sub,
            WI::I64Mul => Instruction::I64Mul,
            WI::I64DivS => Instruction::I64DivS,
            WI::I64DivU => Instruction::I64DivU,
            WI::I64RemS => Instruction::I64RemS,
            WI::I64RemU => Instruction::I64RemU,
            WI::I64And => Instruction::I64And,
            WI::I64Or => Instruction::I64Or,
            WI::I64Xor => Instruction::I64Xor,
            WI::I64Shl => Instruction::I64Shl,
            WI::I64ShrS => Instruction::I64ShrS,
            WI::I64ShrU => Instruction::I64ShrU,
            WI::I64Rotl => Instruction::I64Rotl,
            WI::I64Rotr => Instruction::I64Rotr,
            WI::I32WrapI64 => Instruction::I32WrapI64,
            WI::I64ExtendI32S => Instruction::I64ExtendI32S,
            WI::I64ExtendI32U => Instruction::I64ExtendI32U,
            WI::I32Extend8S => Instruction::I32Extend8S,
            WI::I32Extend16S => Instruction::I32Extend16S,
            WI::I64Extend8S => Instruction::I64Extend8S,
            WI::I64Extend16S => Instruction::I64Extend16S,
            WI::I64Extend32S => Instruction::I64Extend32S,
            WI::F32Eq => Instruction::F32Eq,
            WI::F32Ne => Instruction::F32Ne,
            WI::F32Lt => Instruction::F32Lt,
            WI::F32Gt => Instruction::F32Gt,
            WI::F32Le => Instruction::F32Le,
            WI::F32Ge => Instruction::F32Ge,
            WI::F64Eq => Instruction::F64Eq,
            WI::F64Ne => Instruction::F64Ne,
            WI::F64Lt => Instruction::F64Lt,
            WI::F64Gt => Instruction::F64Gt,
            WI::F64Le => Instruction::F64Le,
            WI::F64Ge => Instruction::F64Ge,
            WI::F32Abs => Instruction::F32Abs,
            WI::F32Neg => Instruction::F32Neg,
            WI::F32Ceil => Instruction::F32Ceil,
            WI::F32Floor => Instruction::F32Floor,
            WI::F32Trunc => Instruction::F32Trunc,
            WI::F32Nearest => Instruction::F32Nearest,
            WI::F32Sqrt => Instruction::F32Sqrt,
            WI::F32Add => Instruction::F32Add,
            WI::F32Sub => Instruction::F32Sub,
            WI::F32Mul => Instruction::F32Mul,
            WI::F32Div => Instruction::F32Div,
            WI::F32Min => Instruction::F32Min,
            WI::F32Max => Instruction::F32Max,
            WI::F32Copysign => Instruction::F32Copysign,
            WI::F64Abs => Instruction::F64Abs,
            WI::F64Neg => Instruction::F64Neg,
            WI::F64Ceil => Instruction::F64Ceil,
            WI::F64Floor => Instruction::F64Floor,
            WI::F64Trunc => Instruction::F64Trunc,
            WI::F64Nearest => Instruction::F64Nearest,
            WI::F64Sqrt => Instruction::F64Sqrt,
            WI::F64Add => Instruction::F64Add,
            WI::F64Sub => Instruction::F64Sub,
            WI::F64Mul => Instruction::F64Mul,
            WI::F64Div => Instruction::F64Div,
            WI::F64Min => Instruction::F64Min,
            WI::F64Max => Instruction::F64Max,
            WI::F64Copysign => Instruction::F64Copysign,
            WI::I32TruncF32S => Instruction::I32TruncF32S,
            WI::I32TruncF32U => Instruction::I32TruncF32U,
            WI::I32TruncF64S => Instruction::I32TruncF64S,
            WI::I32TruncF64U => Instruction::I32TruncF64U,
            WI::I64TruncF32S => Instruction::I64TruncF32S,
            WI::I64TruncF32U => Instruction::I64TruncF32U,
            WI::I64TruncF64S => Instruction::I64TruncF64S,
            WI::I64TruncF64U => Instruction::I64TruncF64U,
            WI::F32ConvertI32S => Instruction::F32ConvertI32S,
            WI::F32ConvertI32U => Instruction::F32ConvertI32U,
            WI::F32ConvertI64S => Instruction::F32ConvertI64S,
            WI::F32ConvertI64U => Instruction::F32ConvertI64U,
            WI::F32DemoteF64 => Instruction::F32DemoteF64,
            WI::F64ConvertI32S => Instruction::F64ConvertI32S,
            WI::F64ConvertI32U => Instruction::F64ConvertI32U,
            WI::F64ConvertI64S => Instruction::F64ConvertI64S,
            WI::F64ConvertI64U => Instruction::F64ConvertI64U,
            WI::F64PromoteF32 => Instruction::F64PromoteF32,
            WI::I32TruncSatF32S => Instruction::I32TruncSatF32S,
            WI::I32TruncSatF32U => Instruction::I32TruncSatF32U,
            WI::I32TruncSatF64S => Instruction::I32TruncSatF64S,
            WI::I32TruncSatF64U => Instruction::I32TruncSatF64U,
            WI::I64TruncSatF32S => Instruction::I64TruncSatF32S,
            WI::I64TruncSatF32U => Instruction::I64TruncSatF32U,
            WI::I64TruncSatF64S => Instruction::I64TruncSatF64S,
            WI::I64TruncSatF64U => Instruction::I64TruncSatF64U,
            _ => {
                unreachable!("not supported opcode: {:?}", self);
                // return Err(WazmError::NotSupportedOpcode);
            }
        };
        result.push(instr);
        Ok(())
    }
}
