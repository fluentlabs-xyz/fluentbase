[workspace]
members = [
    "contracts/*",
    "crates/*",
    "revm/bins/revme",
    "revm/crates/*",
    "examples/*",
    "e2e",
]
exclude = [
    # exclude revm e2e testing suite to let it be a separate crate
    "revm/e2e",
    "examples/svm",
]
resolver = "2"

[workspace.package]
authors = [
    "Dmitry Savonin <dmitry@fluentlabs.xyz>",
]
repository = "https://github.com/fluentlabs-xyz/fuentbase"
edition = "2021"
readme = "README.md"
license = "MIT"
keywords = ["wasm", "webassembly", "interpreter", "vm"]
categories = ["wasm", "no-std", "virtualization"]

[workspace.dependencies]
# fluentbase
fluentbase-build = { path = "./crates/build", default-features = false }
fluentbase-codec = { path = "./crates/codec", default-features = false, features = ["derive"] }
fluentbase-codec-derive = { path = "./crates/codec-derive", default-features = false }
fluentbase-contracts = { path = "./contracts", default-features = false }
fluentbase-evm = { path = "./crates/evm", default-features = false }
fluentbase-genesis = { path = "./crates/genesis", default-features = false }
fluentbase-runtime = { path = "./crates/runtime", default-features = false }
fluentbase-sdk = { path = "./crates/sdk", default-features = false }
fluentbase-sdk-derive = { path = "./crates/sdk-derive", default-features = false }
fluentbase-sdk-testing = { path = "crates/testing" }
fluentbase-types = { path = "./crates/types", default-features = false }
fluentbase-svm = { path = "./crates/svm", default-features = false }
fluentbase-erc20 = { path = "./crates/erc20", default-features = false }

solana-pubkey = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-instruction = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-account-info = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-clock = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-epoch-schedule = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-rent = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-sanitize = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-short-vec = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-hash = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-slot-hashes = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-fee-calculator = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-program-error = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-transaction-error = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-sysvar-id = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-sdk-macro = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-serialize-utils = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-last-restart-slot = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-slot-history = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-sha256-hasher = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-decode-error = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-program-entrypoint = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-feature-set = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-program-memory = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-stable-layout = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-bincode = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-precompile-error = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-native-token = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
solana-atomic-u64 = { git = "https://github.com/fluentlabs-xyz/agave", branch = "feat/svm", default-features = false }
#solana-pubkey = { path = "../agave/sdk/pubkey", default-features = false }
#solana-instruction = { path = "../agave/sdk/instruction", default-features = false }
#solana-account-info = { path = "../agave/sdk/account-info", default-features = false }
#solana-clock = { path = "../agave/sdk/clock", default-features = false }
#solana-epoch-schedule = { path = "../agave/sdk/epoch-schedule", default-features = false }
#solana-rent = { path = "../agave/sdk/rent", default-features = false }
#solana-sanitize = { path = "../agave/sdk/sanitize", default-features = false }
#solana-short-vec = { path = "../agave/short-vec", default-features = false }
#solana-hash = { path = "../agave/sdk/hash", default-features = false }
#solana-slot-hashes = { path = "../agave/sdk/slot-hashes", default-features = false }
#solana-fee-calculator = { path = "../agave/sdk/fee-calculator", default-features = false }
#solana-program-error = { path = "../agave/sdk/program-error", default-features = false }
#solana-transaction-error = { path = "../agave/sdk/transaction-error", default-features = false }
#solana-sysvar-id = { path = "../agave/sdk/sysvar-id", default-features = false }
#solana-sdk-macro = { path = "../agave/sdk/macro", default-features = false }
#solana-serialize-utils = { path = "../agave/sdk/serialize-utils", default-features = false }
#solana-last-restart-slot = { path = "../agave/sdk/last-restart-slot", default-features = false }
#solana-slot-history = { path = "../agave/sdk/slot-history", default-features = false }
#solana-sha256-hasher = { path = "../agave/sdk/sha256-hasher", default-features = false }
#solana-decode-error = { path = "../agave/sdk/decode-error", default-features = false }
#solana-program-entrypoint = { path = "../agave/sdk/program-entrypoint", default-features = false }
#solana-feature-set = { path = "../agave/sdk/feature-set", default-features = false }
#solana-program-memory = { path = "../agave/sdk/program-memory", default-features = false }
#solana-stable-layout = { path = "../agave/sdk/stable-layout", default-features = false }
#solana-bincode = { path = "../agave/sdk/bincode", default-features = false }
#solana-precompile-error = { path = "../agave/sdk/precompile-error", default-features = false }
#solana-native-token = { path = "../agave/sdk/native-token", default-features = false }
#solana-atomic-u64 = { path = "../agave/sdk/atomic-u64", default-features = false }

solana_rbpf = { git = "https://github.com/fluentlabs-xyz/rbpf", branch = "feat/svm", default-features = false }
#solana_rbpf = { path = "../rbpf", default-features = false }


# rwasm
rwasm = { git = "https://github.com/fluentlabs-xyz/rwasm", branch = "devel", default-features = false }

# alloy
alloy-primitives = { version = "1.2.0", default-features = false, features = ["sha3-keccak"] }
alloy-rlp = { version = "0.3.12", default-features = false }
alloy-sol-types = { version = "1.2.0", default-features = false }
alloy-consensus = { version = "1.0.12", default-features = false }
alloy-eips = { version = "1.0.12", default-features = false }
alloy-genesis = { version = "1.0.11", default-features = false }
alloy-serde = { version = "1.0.12", default-features = false }
alloy-provider = { version = "1.0.11", features = ["reqwest"], default-features = false }
alloy-signer = { version = "1.0.11", default-features = false }
alloy-signer-local = { version = "1.0.11", default-features = false }
alloy-transport = { version = "1.0.11" }

# misc
scopeguard = { version = "1.2.0", default-features = false }
bytemuck = { version = "1.19.0", default-features = false }
bytemuck_derive = { version = ">=1.8.0, <1.9.0", default-features = false }
blake3 = { version = "1.5.4", default-features = false }
base64 = { version = "0.22.1", default-features = false }
byteorder = { version = "1.5.0", default-features = false }
keccak-hash = { version = "0.11.0", default-features = false }
itertools = { version = "0.14.0", default-features = false, features = ["use_alloc"] }

bincode_v1_3_3 = { package = "bincode", git = "https://github.com/fluentlabs-xyz/bincode", tag = "v1.3.3" }
num-derive = { version = "0.4" }
num-traits = { version = "0.2", features = ["i128"], default-features = false }


hashbrown = { version = "0.15.0", default-features = false, features = ["default-hasher", "inline-more"] }
serde = { version = "1.0.203", default-features = false, features = ["derive", "rc"] }
serde_json = { version = "1.0", default-features = false }
serde_bytes = { version = "0.11.15", default-features = false }
spin = { version = "0.10.0", default-features = false }
static_assertions = { version = "1.1.0", default-features = false }
memoffset = { version = "0.9.1", default-features = false }
serial_test = { version = "3.2.0", default-features = false }
test-case = { version = "3.3.1", default-features = false }
paste = { version = "1.0", default-features = false }
auto_impl = { version = "1.2", default-features = false }
bytes = { version = "1.10.1", default-features = false }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
hex-literal = { version = "1.0.0" }
strum_macros = { version = "0.27.1" }
lazy_static = { version = "1.5.0", default-features = false, features = ["spin_no_std"] }
anyhow = { version = "1.0.86", default-features = false }
syn = "2.0"
tiny-keccak = { version = "2.0.2", features = ["keccak"] }
bitvec = { version = "1", default-features = false, features = ["alloc"] }
bincode = { version = "2.0.1", default-features = false, features = ["alloc", "derive"] }
wasmtime = { version = "31.0.0" }

# revm
revm = { path = "revm/crates/revm", default-features = false, features = ["secp256r1"] }
primitives = { path = "revm/crates/primitives", package = "revm-primitives", default-features = false }
bytecode = { path = "revm/crates/bytecode", package = "revm-bytecode", default-features = false }
database = { path = "revm/crates/database", package = "revm-database", default-features = false }
database-interface = { path = "revm/crates/database/interface", package = "revm-database-interface", default-features = false }
state = { path = "revm/crates/state", package = "revm-state", default-features = false }
interpreter = { path = "revm/crates/interpreter", package = "revm-interpreter", default-features = false }
inspector = { path = "revm/crates/inspector", package = "revm-inspector", default-features = false }
precompile = { path = "revm/crates/precompile", package = "revm-precompile", default-features = false }
statetest-types = { path = "revm/crates/statetest-types", package = "revm-statetest-types", default-features = false }
context = { path = "revm/crates/context", package = "revm-context", default-features = false }
context-interface = { path = "revm/crates/context/interface", package = "revm-context-interface", default-features = false }
handler = { path = "revm/crates/handler", package = "revm-handler", default-features = false }
op-revm = { path = "revm/crates/op-revm", default-features = false }
rwasm-revm = { path = "revm/crates/rwasm-revm", default-features = false }

# alloy
alloy-eip2930 = { version = "0.2.0", default-features = false }
alloy-eip7702 = { version = "0.6.0", default-features = false }

# precompiles
ark-bls12-381 = { version = "0.5", default-features = false }
ark-bn254 = { version = "0.5", default-features = false }
ark-ec = { version = "0.5", default-features = false }
ark-ff = { version = "0.5", default-features = false }
ark-serialize = { version = "0.5", default-features = false }
aurora-engine-modexp = { version = "1.1", default-features = false }
blst = "0.3.13"
bn = { package = "substrate-bn", version = "0.6", default-features = false }
c-kzg = { version = "2.1.1", default-features = false }
k256 = { version = "0.13.3", default-features = false }
libsecp256k1 = { version = "0.7", default-features = false }
kzg-rs = { version = "0.2.4", default-features = false }
secp256k1 = { version = "0.30", default-features = false }
sha2 = { version = "0.10", default-features = false }
ripemd = { version = "0.1", default-features = false }
p256 = { version = "0.13.2", default-features = false }

# bytecode
phf = { version = "0.11", default-features = false }

# revme
clap = { version = "4", features = ["derive"] }
criterion = { package = "codspeed-criterion-compat", version = "2.7" }

# misc
bitflags = { version = "2.6.0", default-features = false }
cfg-if = { version = "1.0", default-features = false }
derive-where = { version = "1.2.7", default-features = false }
once_cell = { version = "1.19", default-features = false }
rand = "0.8"
tokio = "1.44"
either = { version = "1.15.0", default-features = false }

# dev-dependencies
eyre = "0.6.12"
hash-db = "0.15"
indicatif = "0.17"
plain_hasher = "0.2"
rstest = "0.24.0"
serde_derive = "1.0"
thiserror = "2.0"
triehash = "0.8"
walkdir = "2.5"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rustdoc.all = "warn"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.bench]
lto = "fat"
codegen-units = 1

[profile.release]
panic = "abort"
lto = true
opt-level = 3
strip = false
debug = false
debug-assertions = false
rpath = false
codegen-units = 1

[profile.dev.build-override]
debug = false # disable debug symbols for build.rs to avoid 200+MB build-script binaries

# Use the `--profile profiling` flag to show symbols in release mode.
# e.g. `cargo build --profile profiling`
[profile.profiling]
debug = 2
inherits = "release"
strip = false

[profile.ethtests]
inherits = "test"
opt-level = 3